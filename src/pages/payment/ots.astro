---
import Layout from "../../layouts/layout.astro";
import Button from "../../components/button.astro";
import Input from "../../components/input.astro";

import "../../styles/checkout.css";
import "../../styles/button.css";

const COURIER_PIN = import.meta.env.COURIER_PIN;

let isAuthenticated = false;

if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();
    const submittedPin = formData.get("pin");

    if (submittedPin === COURIER_PIN) {
      isAuthenticated = true;
    }
  } catch {
    // Intentionally empty - ignore form parsing errors
  }
}
---

<Layout>
  {
    !isAuthenticated ? (
      <div class="container">
        <div class="formCustomer">
          <div class="containerForm">
            <form method="POST">
              <Input
                label="PIN Kurir"
                instruction="Masukkan PIN untuk mengakses halaman ini."
                placeholder="Masukkan PIN"
                id="pin"
                type="password"
                name="pin"
              />
              <Button style="primary">Verifikasi</Button>
            </form>
          </div>
        </div>
      </div>
    ) : (
      <div class="container">
        <div id="formCustomer" class="formCustomer">
          <div class="containerForm">
            <Input
              label="Nama lengkap"
              instruction="Isi nama pembeli ya, biar mudah pas pendataan."
              placeholder="Ketik nama lengkap"
              id="namalengkap"
              type="text"
            />

            <Input
              label="Nominal pembayaran"
              instruction="Masukkan total nominal yang harus dibayar."
              placeholder="0"
              id="nominal"
              type="text"
            />

            <div class="customOptions">
              <div class="header">
                <div class="optionLabel">Metode bayar</div>
              </div>
              <div class="options">
                <label class="option">
                  <input type="radio" name="payment" value="transfer" checked />
                  <div class="optionContent">
                    <div class="optionTitle">Transfer via Flip</div>
                    <div class="optionDesc">
                      Bayar lewat Flip, gampang, aman dan cepat!
                    </div>
                  </div>
                </label>
              </div>
            </div>
          </div>
        </div>

        <div class="summaryCart">
          <div class="totalContainer">
            <div class="label">Total</div>
            <div class="valueBig" id="totalValue">
              Rp0
            </div>
          </div>
          <Button style="block" id="checkoutButton">
            Buat Link Pembayaran
          </Button>

          <div id="paymentLink" style="display: none; margin-top: 20px;">
            <div class="paymentLinkContainer">
              <div class="paymentLinkLabel">Link Pembayaran:</div>
              <div class="paymentLinkValue" id="paymentLinkValue" />
              <div class="paymentLinkActions">
                <Button id="copyButton" style="outline">
                  Salin Link
                </Button>
                <Button id="shareButton" style="outline">
                  Bagikan
                </Button>
              </div>
            </div>
          </div>
        </div>
      </div>
    )
  }
</Layout>

<style>
  .paymentLinkLabel {
    font-weight: 500;
    margin-bottom: 8px;
  }

  .paymentLinkValue {
    word-break: break-all;
    background: white;
    padding: 10px;
    border-radius: 4px;
    border: 1px solid #ddd;
    margin-bottom: 10px;
  }

  .paymentLinkActions {
    display: flex;
    gap: 10px;
  }

  form {
    display: flex;
    flex-direction: column;
    gap: 16px;
  }
</style>

<script type="module">
  class CheckoutController {
    static init() {
      this.el = {
        formCustomer: document.getElementById("formCustomer"),
        summary: document.querySelector(".summaryCart"),
        totalVal: document.getElementById("totalValue"),
        checkoutBtn: document.getElementById("checkoutButton"),
        noteTotal: document.getElementById("noteTotal"),
        nominalInput: document.getElementById("nominal"),
        paymentLink: document.getElementById("paymentLink"),
        paymentLinkValue: document.getElementById("paymentLinkValue"),
        copyButton: document.getElementById("copyButton"),
        shareButton: document.getElementById("shareButton"),
      };

      this.el.checkoutBtn?.addEventListener("click", (e) => {
        e.preventDefault();
        this.handleCheckout();
      });

      this.el.nominalInput?.addEventListener("input", () => {
        const value = this.el.nominalInput.value.replace(/\D/g, "");
        this.el.nominalInput.value = value;
        this.el.totalVal.textContent = `Rp${Number(value).toLocaleString("id-ID")}`;
      });

      this.el.copyButton?.addEventListener("click", () => {
        const text = this.el.paymentLinkValue.textContent;
        navigator.clipboard.writeText(text).then(() => {
          alert("Link berhasil disalin!");
        });
      });

      this.el.shareButton?.addEventListener("click", async () => {
        const text = this.el.paymentLinkValue.textContent;
        try {
          await navigator.share({
            title: "Link Pembayaran",
            text: "Silakan lakukan pembayaran melalui link berikut:",
            url: text,
          });
        } catch (err) {
          // eslint-disable-next-line no-console
          console.error("Error sharing:", err);
          alert("Gagal membagikan link. Silakan salin manual.");
        }
      });
    }

    static validate() {
      let ok = true;
      let firstField = null;

      const nameInp = document.getElementById("namalengkap");
      const nameErr = nameInp.parentElement.querySelector(".errorText");
      if (nameInp.value.trim().length < 3) {
        nameErr.textContent = "Nama lengkap minimal 3 karakter";
        nameErr.style.display = "block";
        ok = false;
        firstField = firstField || nameInp;
      } else {
        nameErr.style.display = "none";
      }

      const nominalInp = document.getElementById("nominal");
      const nominalErr = nominalInp.parentElement.querySelector(".errorText");
      if (!nominalInp.value || Number(nominalInp.value) <= 0) {
        nominalErr.textContent = "Nominal harus lebih dari 0";
        nominalErr.style.display = "block";
        ok = false;
        firstField = firstField || nominalInp;
      } else {
        nominalErr.style.display = "none";
      }

      if (!ok && firstField) {
        firstField.scrollIntoView({ behavior: "smooth", block: "center" });
        firstField.focus();
      }

      return ok;
    }

    static saveCustomer() {
      const name = window.getInputValue("namalengkap");
      const nominal = Number(window.getInputValue("nominal"));
      const ts = new Date().toISOString();
      const orderId = `${name.replace(/\s+/g, "").toUpperCase()}${Date.now()}`;

      const data = {
        name,
        paymentMethod: "transfer",
        timestamp: ts,
        orderId,
        total: nominal,
      };
      localStorage.setItem("customerData", JSON.stringify(data));
      return data;
    }

    static async handleCheckout() {
      if (!this.validate()) return;

      const cust = this.saveCustomer();

      try {
        const response = await fetch("/api/payment-ots", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            name: cust.name,
            amount: cust.total,
            orderId: cust.orderId,
          }),
        });

        const result = await response.json();
        // eslint-disable-next-line no-console
        console.log("Flip API:", result);

        const raw =
          result.link_url ??
          result.data?.link_url ??
          result.data?.payment?.link_url;
        const linkId =
          result.link_id ??
          result.data?.link_id ??
          result.data?.payment?.link_id;

        if (!raw || !linkId) {
          // eslint-disable-next-line no-console
          console.error("Flip response missing link_url or link_id:", result);
          alert("Gagal mendapatkan data pembayaran.");
          return;
        }

        const url = /^https?:\/\//i.test(result.link_url)
          ? result.link_url
          : `https://${result.link_url}`;

        this.el.paymentLinkValue.textContent = url;
        this.el.paymentLink.style.display = "block";
        this.el.paymentLink.scrollIntoView({
          behavior: "smooth",
          block: "center",
        });
      } catch (err) {
        // eslint-disable-next-line no-console
        console.error(err);
        alert("Gagal memproses pembayaran. Silakan coba lagi.");
      }
    }
  }

  CheckoutController.init();
</script>

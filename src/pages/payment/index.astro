---
import Layout from "../../layouts/layout.astro";
import Button from "../../components/button.astro";
---

<Layout>
  <div class="container">
    <div class="finishCard" id="finishCardCheck">
      <img src="/check.svg" class="illust" alt="IllustCart" />
      <h2>Lagi dicek dulu yaa...</h2>
      <div class="description">
        Tunggu bentar, kita lagi ngecek status pembayarannya nih. Jangan tutup
        halaman ini dulu ya 🍃
      </div>
    </div>

    <div class="finishCard" id="finishCardSuccess">
      <img src="/done.svg" class="illust" alt="IllustCart" />
      <h2>Tinggal satu langkah lagi~</h2>
      <div class="description">
        Makasih ya udah pesen di Cheche Cakes 💖, sekarang tinggal kirim pesanan
        ini ke WhatsApp admin biar cepet diproses.
      </div>
      <div class="buttonGroup">
        <Button style="outline">Kembali ke beranda</Button>
        <Button id="whatsappButton">Kirim ke WhatsApp</Button>
      </div>
      <div class="smallNote">
        Jangan utak-atik pesan WA-nya.
        <br />
        Langsung kirim aja ya biar admin bisa proses cepat 🙌
      </div>
    </div>

    <div class="finishCard" id="finishCardFailed">
      <img src="/fail.svg" class="illust" alt="IllustCart" />
      <h2>Hmm... kayaknya belum berhasil nih</h2>
      <div class="description">
        Kita belum dapet konfirmasi dari pembayaran kamu. Udah bayar? Coba di
        refresh aja.
      </div>
      <Button id="refreshBtn">Refresh Halaman</Button>
      <div class="description">
        Tapi kalo belum bayar, pastikan bayar dulu ya~
      </div>
      <Button>Balik ke halaman Pembayaran</Button>
    </div>
  </div>
</Layout>

<!-- <script type="module">
  (function () {
    const hasFlipData =
      localStorage.getItem("flipResponse") ||
      localStorage.getItem("flipLinkId") ||
      localStorage.getItem("flipLinkUrl");
    if (!hasFlipData) {
      window.location.replace("/payment/cod");
    }
  })();

  const cartData = JSON.parse(localStorage.getItem("cart") || "[]");
  const customerData = JSON.parse(localStorage.getItem("customerData") || "{}");
  
  if (cartData.length === 0 || Object.keys(customerData).length === 0) {
    window.location.replace("../emptyCart");
  }

  // ------------------------- TRANSFER CONFIRMATION -------------------------
  class TransferConfirmationController {
    static init() {
      this.el = {
        successCard: document.getElementById("finishCardSuccess"),
        checkingCard: document.getElementById("finishCardCheck"),
        failedCard: document.getElementById("finishCardFailed"),
        whatsappBtn: document.getElementById("whatsappButton"),
        backBtn: document.querySelector(".buttonGroup button:first-child"),
        refreshBtn: document.querySelector(
          "#finishCardFailed button:first-child"
        ),
        backToFlipBtn: document.querySelector(
          "#finishCardFailed button:last-child"
        ),
      };
      this.hasSentWhatsapp = false;

      this.cartData = JSON.parse(localStorage.getItem("cart") || "[]");
      this.customerData = JSON.parse(
        localStorage.getItem("customerData") || "{}"
      );
      this.flipData = JSON.parse(localStorage.getItem("flipResponse") || "{}");

      this.showCard(this._determineInitialCard());

      this.el.whatsappBtn?.addEventListener("click", () =>
        this.sendToWhatsApp()
      );
      this.el.backBtn?.addEventListener("click", (e) => this.onBack(e));
      this.el.refreshBtn?.addEventListener("click", () =>
        this.checkPaymentStatus()
      );
      this.el.backToFlipBtn?.addEventListener("click", () =>
        this.onBackToFlip()
      );
      window.addEventListener("pageshow", () => {
        const cartData = JSON.parse(localStorage.getItem("cart") || "[]");
        const customerData = JSON.parse(localStorage.getItem("customerData") || "{}");
        
        if (cartData.length === 0 || Object.keys(customerData).length === 0) {
          window.location.replace("/payment/empty-cart");
        } else {
          this.showCard(this._determineInitialCard());
        }
      });

      if (this._shouldCheck()) {
        this.checkPaymentStatus();
      }
    }

    static _determineInitialCard() {
      if (!this.cartData.length || !this.customerData.orderId) {
        return "finishCardEmpty";
      }
      return this.el.checkingCard ? "finishCardCheck" : "finishCardCheck";
    }

    static _shouldCheck() {
      return this._determineInitialCard() === "finishCardCheck";
    }

    static showCard(cardId) {
      document.querySelectorAll(".finishCard").forEach((c) => {
        c.style.display = "none";
      });
      const sel = document.getElementById(cardId);
      if (sel) sel.style.display = "flex";
    }

    static async checkPaymentStatus() {
      if (!this.flipData.link_id) {
        return this.showCard("finishCardFailed");
      }

      try {
        const response = await fetch("/api/payment-check", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            link_id: this.flipData.link_id
          }),
        });

        const result = await response.json();
        // eslint-disable-next-line no-console
        console.log("Payment status response:", result);

        if (result.success && result.isSuccessful) {
          this.showCard("finishCardSuccess");
        } else {
          this.showCard("finishCardFailed");
        }
      } catch (err) {
        // eslint-disable-next-line no-console
        console.error("Error checking payment:", err);
        this.showCard("finishCardFailed");
      }
    }

    static sendToWhatsApp() {
      if (!this.cartData.length || !this.customerData.orderId) {
        alert("Tidak ada data pesanan untuk dikirim.");
        return;
      }

      const c = this.customerData;
      const lines = [
        `*PESANAN BARU*`,
        ``,
        `*Detail Pelanggan:*`,
        `Nama         : ${c.name}`,
        `No. WA       : ${c.phone}`,
        `Alamat       : ${c.address}`,
        `Metode Bayar : Transfer Flip`,
        `Metode Kirim : ${c.deliveryMethod === "delivery" ? "Diantar" : "Ambil Sendiri"}`,
        ``,
        `*Detail Pesanan:*`,
      ];

      this.cartData.forEach((item, i) => {
        lines.push(
          `${i + 1}. ${item.name} x${item.quantity} = ${formatRupiah(item.price * item.quantity)}`
        );
      });

      lines.push(
        ``,
        `*Ringkasan Pembayaran:*`,
        `Subtotal : ${formatRupiah(c.subtotal)}`,
        `Ongkir   : ${formatRupiah(c.deliveryFee)}`,
        `Total    : ${formatRupiah(c.total)}`,
        ``,
        `ID Pesanan: ${c.orderId}`
      );

      const msg = encodeURIComponent(lines.join("\n"));
      window.open(`https://wa.me/6281906955567?text=${msg}`, "_blank");
      this.hasSentWhatsapp = true;
    }

    static onBack(e) {
      e.preventDefault();
      if (!this.hasSentWhatsapp) {
        alert("Jangan lupa kirim pesanan ke WhatsApp admin dulu ya! 🙏");
        return;
      }
      localStorage.removeItem("cart");
      localStorage.removeItem("customerData");
      localStorage.removeItem("flipResponse");
      localStorage.removeItem("flipLinkId");
      localStorage.removeItem("flipLinkUrl");
      window.location.href = "/";
    }

    static onBackToFlip() {
      if (this.flipData.link_url) {
        window.location.href = /^https?:\/\//i.test(this.flipData.link_url)
          ? this.flipData.link_url
          : `https://${this.flipData.link_url}`;
      }
    }
  }

  // ------------------------- UTILS -------------------------
  function formatRupiah(amount) {
    return `Rp${Number(amount).toLocaleString("id-ID")}`;
  }

  document.addEventListener("DOMContentLoaded", () => {
    TransferConfirmationController.init();
  });
</script> -->

<!-- <script>
  document.addEventListener("DOMContentLoaded", () => {
    const checkCard = document.getElementById("finishCardCheck");
    const successCard = document.getElementById("finishCardSuccess");
    const failedCard = document.getElementById("finishCardFailed");

    if (checkCard) checkCard.style.display = "flex";
    if (successCard) successCard.style.display = "none";
    if (failedCard) failedCard.style.display = "none";

    let reference;
    const paymentDataString = localStorage.getItem("paymentData");
    if (paymentDataString) {
      try {
        const paymentData = JSON.parse(paymentDataString);
        reference = paymentData.data.reference;
      } catch (error) {
        console.error("Error parsing payment data:", error);
      }
    }

    if (!reference) {
      if (checkCard) checkCard.style.display = "none";
      if (failedCard) failedCard.style.display = "flex";
      return;
    }

    const checkPaymentStatus = async () => {
      try {
        const response = await fetch(
          `/api/payment-check?reference=${reference}`
        );
        const result = await response.json();

        if (result.success) {
          const message = result.message || "";

          if (
            (message.includes("DIBAYAR") && !message.includes("UNPAID")) ||
            (message.includes("PAID") && !message.includes("UNPAID"))
          ) {
            if (checkCard) checkCard.style.display = "none";
            if (successCard) successCard.style.display = "flex";

            // clearInterval(intervalId);

            const whatsappButton = document.getElementById("whatsappButton");
            if (whatsappButton) {
              whatsappButton.addEventListener("click", () => {
                const customerData = JSON.parse(
                  localStorage.getItem("customerData") || "{}"
                );

                // Fungsi untuk format rupiah
                function formatRupiah(amount: number) {
                  return `Rp${Number(amount).toLocaleString("id-ID")}`;
                }

                const lines = [
                  `*PESANAN BARU*`,
                  ``,
                  `*Detail Pelanggan:*`,
                  `Nama         : ${customerData.name}`,
                  `No. WA       : ${customerData.phone}`,
                  `Alamat       : ${customerData.address}`,
                  `Metode Bayar : Transfer VA`,
                  `Metode Kirim : ${customerData.deliveryMethod === "delivery" ? "Diantar" : "Ambil Sendiri"}`,
                  ``,
                  `*Detail Pesanan:*`,
                ];

                if (customerData.cartData && customerData.cartData.length) {
                  customerData.cartData.forEach(
                    (
                      item: { name: string; quantity: number; price: number },
                      i: number
                    ) => {
                      lines.push(
                        `${i + 1}. ${item.name} x${item.quantity} = ${formatRupiah(item.price * item.quantity)}`
                      );
                    }
                  );
                }

                if (customerData.cartItems && customerData.cartItems.length) {
                  customerData.cartItems.forEach(
                    (
                      item: { name: string; quantity: number; price: number },
                      i: number
                    ) => {
                      lines.push(
                        `${i + 1}. ${item.name} x${item.quantity} = ${formatRupiah(item.price * item.quantity)}`
                      );
                    }
                  );
                }

                lines.push(
                  ``,
                  `*Ringkasan Pembayaran:*`,
                  `Subtotal : ${formatRupiah(customerData.subtotal)}`,
                  `Ongkir   : ${formatRupiah(customerData.deliveryFee)}`,
                  `Admin    : ${formatRupiah(customerData.adminFee)}`,
                  `Total    : ${formatRupiah(customerData.total)}`,
                  ``,
                  `ID Pesanan: ${customerData.orderId || reference}`
                );

                const message = lines.join("\n");

                window.open(
                  `https://wa.me/6285156220232?text=${encodeURIComponent(message)}`,
                  "_blank"
                );

                localStorage.setItem("whatsappSent", "true");
              });
            }

            const backHomeButton = document.querySelector(
              "#finishCardSuccess .buttonGroup button:first-child"
            );
            if (backHomeButton) {
              backHomeButton.addEventListener("click", () => {
                const whatsappSent =
                  localStorage.getItem("whatsappSent") === "true";
                if (whatsappSent) {
                  localStorage.removeItem("cart");
                  localStorage.removeItem("customerData");
                  localStorage.removeItem("paymentData");
                  localStorage.removeItem("whatsappSent");

                  window.location.href = "/";
                } else {
                  alert(
                    "Jangan lupa kirim pesanan ke WhatsApp admin dulu ya! 🙏"
                  );
                }
              });
            }
          } else {
            if (checkCard) checkCard.style.display = "none";
            if (failedCard) failedCard.style.display = "flex";

            function refreshPage() {
              location.reload();
            }

            const refreshButton = document.querySelector("#refreshBtn");
            if (refreshButton) {
              refreshButton.addEventListener("click", refreshPage);
            }

            const backToPaymentButton = document.querySelector(
              "#finishCardFailed Button:last-child"
            );
            if (backToPaymentButton) {
              backToPaymentButton.addEventListener("click", () => {
                window.location.href = "/payment/va";
              });
            }
          }
        } else {
          if (checkCard) checkCard.style.display = "none";
          if (failedCard) failedCard.style.display = "flex";
        }
      } catch (error) {
        console.error("Error checking payment status:", error);
        if (checkCard) checkCard.style.display = "none";
        if (failedCard) failedCard.style.display = "flex";
      }
    };

    checkPaymentStatus();
    // const intervalId = setInterval(checkPaymentStatus, 20000);

    // window.addEventListener("beforeunload", () => {
    //   clearInterval(intervalId);
    // });
  });
</script> -->

<script>
  document.addEventListener("DOMContentLoaded", () => {
    // ===== Helpers =====
    const setDisplay = (el: HTMLElement | null, value: string) => {
      if (el) el.style.display = value;
    };
    const show = (el: HTMLElement | null) => setDisplay(el, "flex");
    const hide = (el: HTMLElement | null) => setDisplay(el, "none");

    const safeParse = (str: string) => {
      try {
        return JSON.parse(str || "{}");
      } catch (e) {
        console.error("JSON parse error:", e);
        return {};
      }
    };

    const isPaidMessage = (msg = "") =>
      (msg.includes("DIBAYAR") && !msg.includes("UNPAID")) ||
      (msg.includes("PAID") && !msg.includes("UNPAID"));

    const formatRupiah = (amount: number) =>
      `Rp${Number(amount).toLocaleString("id-ID")}`;

    const buildWhatsAppMessage = (
      customerData: {
        name: string;
        phone: string;
        address: string;
        deliveryMethod: string;
        cartItems?: Array<{
          name: string;
          quantity: number;
          price: number;
        }>;
        subtotal: number;
        deliveryFee: number;
        adminFee: number;
        total: number;
        orderId?: string;
      },
      reference: string
    ) => {
      const lines = [
        `*PESANAN BARU*`,
        ``,
        `*Detail Pelanggan:*`,
        `Nama         : ${customerData.name}`,
        `No. WA       : ${customerData.phone}`,
        `Alamat       : ${customerData.address}`,
        `Metode Bayar : Transfer VA`,
        `Metode Kirim : ${customerData.deliveryMethod === "delivery" ? "Diantar" : "Ambil Sendiri"}`,
        ``,
        `*Detail Pesanan:*`,
      ];

      if (customerData.cartItems && customerData.cartItems.length) {
        customerData.cartItems.forEach(
          (
            item: { name: string; quantity: number; price: number },
            i: number
          ) => {
            lines.push(
              `${i + 1}. ${item.name} x${item.quantity} = ${formatRupiah(item.price * item.quantity)}`
            );
          }
        );
      }

      lines.push(
        ``,
        `*Ringkasan Pembayaran:*`,
        `Subtotal : ${formatRupiah(customerData.subtotal)}`,
        `Ongkir   : ${formatRupiah(customerData.deliveryFee)}`,
        `Admin    : ${formatRupiah(customerData.adminFee)}`,
        `Total    : ${formatRupiah(customerData.total)}`,
        ``,
        `ID Pesanan: ${customerData.orderId || reference}`
      );

      return lines.join("\n");
    };

    // ===== Initialize cards =====
    const checkCard = document.getElementById("finishCardCheck");
    const successCard = document.getElementById("finishCardSuccess");
    const failedCard = document.getElementById("finishCardFailed");

    show(checkCard);
    hide(successCard);
    hide(failedCard);

    // ===== Extract reference =====
    let reference;
    const paymentDataString = localStorage.getItem("paymentData");
    if (paymentDataString) {
      const paymentData = safeParse(paymentDataString);
      try {
        reference = paymentData.data && paymentData.data.reference;
      } catch (error) {
        console.error("Error parsing payment data:", error);
      }
    }

    if (!reference) {
      hide(checkCard);
      show(failedCard);
      return;
    }

    // ===== UI Handlers =====
    const attachSuccessHandlers = () => {
      const whatsappButton = document.getElementById("whatsappButton");
      if (whatsappButton) {
        whatsappButton.addEventListener("click", () => {
          const customerData = safeParse(localStorage.getItem("customerData") || "{}");
          function formatRupiah(amount: number) {
            return `Rp${Number(amount).toLocaleString("id-ID")}`;
          }
          const message = buildWhatsAppMessage(customerData, reference);

          window.open(
            `https://wa.me/6281906955567?text=${encodeURIComponent(message)}`,
            "_blank"
          );

          localStorage.setItem("whatsappSent", "true");
        });
      }

      const backHomeButton = document.querySelector(
        "#finishCardSuccess .buttonGroup button:first-child"
      );
      if (backHomeButton) {
        backHomeButton.addEventListener("click", () => {
          const whatsappSent = localStorage.getItem("whatsappSent") === "true";
          if (whatsappSent) {
            localStorage.removeItem("cart");
            localStorage.removeItem("customerData");
            localStorage.removeItem("paymentData");
            localStorage.removeItem("whatsappSent");
            window.location.href = "/";
          } else {
            alert("Jangan lupa kirim pesanan ke WhatsApp admin dulu ya! 🙏");
          }
        });
      }
    };

    const attachFailedHandlers = () => {
      const refreshPage = () => location.reload();

      const refreshButton = document.querySelector("#refreshBtn");
      if (refreshButton) refreshButton.addEventListener("click", refreshPage);

      // NOTE: keep original selector casing as requested (no value/variable change)
      const backToPaymentButton = document.querySelector(
        "#finishCardFailed Button:last-child"
      );
      if (backToPaymentButton) {
        backToPaymentButton.addEventListener("click", () => {
          window.location.href = "/payment/va";
        });
      }
    };

    // ===== Core flow =====
    const checkPaymentStatus = async () => {
      try {
        const response = await fetch(
          `/api/payment-check?reference=${reference}`
        );
        const result = await response.json();

        if (result.success && isPaidMessage(result.message || "")) {
          hide(checkCard);
          show(successCard);
          attachSuccessHandlers();
        } else {
          hide(checkCard);
          show(failedCard);
          attachFailedHandlers();
        }
      } catch (error) {
        console.error("Error checking payment status:", error);
        hide(checkCard);
        show(failedCard);
        attachFailedHandlers();
      }
    };

    checkPaymentStatus();
    // const intervalId = setInterval(checkPaymentStatus, 20000);
    // window.addEventListener("beforeunload", () => { clearInterval(intervalId); });
  });
</script>

<style>
  .container {
    padding: 24px;
    display: flex;
    flex-direction: column;
    gap: 24px;
    align-items: flex-start;
    justify-content: flex-start;
    align-self: stretch;
    flex: 1;
    position: relative;
    overflow-y: scroll;
  }

  .container::-webkit-scrollbar {
    display: none;
  }

  .illust {
    height: 100px;
    -webkit-user-drag: none;
    user-select: none;
  }

  .finishCard {
    background: #ffffff;
    border-radius: 4px;
    border: 1px solid #000000;
    padding: 32px;
    display: flex;
    flex-direction: column;
    gap: 12px;
    align-items: center;
    justify-content: flex-start;
    align-self: stretch;
    position: relative;
    transition: all 0.3s ease;
  }

  .finishCard:hover {
    border: 1px solid #000000;
    box-shadow: 4px 4px 0 rgba(0, 0, 0, 1);
  }

  .finishCard h2 {
    color: #000000;
    text-align: center;
    font-size: 20px;
    line-height: 24px;
    font-weight: 500;
  }

  .finishCard .description {
    color: #000000;
    text-align: center;
    font-size: 16px;
    line-height: 24px;
    font-weight: 400;
  }

  .buttonGroup {
    display: flex;
    flex-direction: row;
    gap: 8px;
  }

  .smallNote {
    color: #808080;
    text-align: center;
    font-size: 12px;
    line-height: 16px;
    font-weight: 400;
    position: relative;
    align-self: stretch;
  }
</style>

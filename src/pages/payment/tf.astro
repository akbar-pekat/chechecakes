---
import Layout from "../../layouts/layout.astro";
import Button from "../../components/button.astro";
---

<Layout>
  <div class="container">
    <div class="finishCard" id="finishCardCheck">
      <img src="/check.svg" class="illust" alt="IllustCart" />
      <h2>Lagi dicek dulu yaa...</h2>
      <div class="description">
        Tunggu bentar, kita lagi ngecek status pembayarannya nih. Jangan tutup
        halaman ini dulu ya üçÉ
      </div>
    </div>

    <div class="finishCard" id="finishCardSuccess">
      <img src="/done.svg" class="illust" alt="IllustCart" />
      <h2>Tinggal satu langkah lagi~</h2>
      <div class="description">
        Makasih ya udah pesen di Cheche Cakes üíñ, sekarang tinggal kirim pesanan
        ini ke WhatsApp admin biar cepet diproses.
      </div>
      <div class="buttonGroup">
        <Button style="outline">Kembali ke beranda</Button>
        <Button id="whatsappButton">Kirim ke WhatsApp</Button>
      </div>
      <div class="smallNote">
        Jangan utak-atik pesan WA-nya.
        <br />
        Langsung kirim aja ya biar admin bisa proses cepat üôå
      </div>
    </div>

    <div class="finishCard" id="finishCardFailed">
      <img src="/fail.svg" class="illust" alt="IllustCart" />
      <h2>Hmm... kayaknya belum berhasil nih</h2>
      <div class="description">
        Kita belum dapet konfirmasi dari pembayaran kamu. Udah bayar? Coba
        tunggu sebentar terus refresh aja.
      </div>
      <Button>Refresh Halaman</Button>
      <div class="description">
        Kita belum dapet konfirmasi dari pembayaran kamu. Udah bayar? Coba
        tunggu sebentar terus refresh aja.
      </div>
      <Button>Balik ke Flip</Button>
    </div>

    <div class="finishCard" id="finishCardEmpty">
      <img src="/cart.svg" class="illust" alt="IllustCart" />
      <h2>Oops, pesanan kamu belum ada nih!</h2>
      <div class="description">
        Kayaknya kamu belum pesan, yuk balik ke menu buat pilih favoritmu dulu!
      </div>
      <div class="buttonGroup">
        <Button href="/">Lihat menu</Button>
      </div>
    </div>
  </div>
</Layout>

<script type="module">
  // ------------------------- TRANSFER CONFIRMATION -------------------------
  class TransferConfirmationController {
    static init() {
      // Cache elemen
      this.el = {
        successCard: document.getElementById("finishCardSuccess"),
        emptyCard: document.getElementById("finishCardEmpty"),
        checkingCard: document.getElementById("finishCardCheck"),
        failedCard: document.getElementById("finishCardFailed"),
        whatsappBtn: document.getElementById("whatsappButton"),
        backBtn: document.querySelector(".buttonGroup button:first-child"),
        refreshBtn: document.querySelector(
          "#finishCardFailed button:first-child"
        ),
        backToFlipBtn: document.querySelector(
          "#finishCardFailed button:last-child"
        ),
      };
      this.hasSentWhatsapp = false;

      // Load data sekali
      this.cartData = JSON.parse(localStorage.getItem("cart") || "[]");
      this.customerData = JSON.parse(
        localStorage.getItem("customerData") || "{}"
      );
      this.flipData = JSON.parse(localStorage.getItem("flipResponse") || "{}");

      // Render initial card
      this.showCard(this._determineInitialCard());

      // Bind events
      this.el.whatsappBtn?.addEventListener("click", () =>
        this.sendToWhatsApp()
      );
      this.el.backBtn?.addEventListener("click", (e) => this.onBack(e));
      this.el.refreshBtn?.addEventListener("click", () =>
        this.checkPaymentStatus()
      );
      this.el.backToFlipBtn?.addEventListener("click", () =>
        this.onBackToFlip()
      );
      window.addEventListener("pageshow", () =>
        this.showCard(this._determineInitialCard())
      );

      // If we should check status, do it
      if (this._shouldCheck()) {
        this.checkPaymentStatus();
      }
    }

    // Tentukan card mana yang tampil ketika pertama load/back
    static _determineInitialCard() {
      if (!this.cartData.length || !this.customerData.orderId) {
        return "finishCardEmpty";
      }
      // Jika belum pernah cek, tampilkan checking
      return this.el.checkingCard ? "finishCardCheck" : "finishCardCheck";
    }

    // Cek apakah perlu panggil API flip
    static _shouldCheck() {
      return this._determineInitialCard() === "finishCardCheck";
    }

    // Tampilkan salah satu card
    static showCard(cardId) {
      document.querySelectorAll(".finishCard").forEach((c) => {
        c.style.display = "none";
      });
      const sel = document.getElementById(cardId);
      if (sel) sel.style.display = "flex";
    }

    // Panggil API untuk cek status pembayaran
    static async checkPaymentStatus() {
      if (!this.flipData.link_id) {
        return this.showCard("finishCardFailed");
      }

      try {
        const headers = new Headers({
          Accept: "application/json",
          "Content-Type": "application/x-www-form-urlencoded",
          Authorization:
            "Basic SkRKNUpERXpKRTQwUW5oSlZYVkxXRmhNTURaeE5HOWlNV1p6WVhWNlFXTnhaRzVPYkRCUFdWVlJWMUJWTDJsbGVqbGpZV2N5TmpWNmJDNVQ6",
        });

        const resp = await fetch(
          `https://bigflip.id/big_sandbox_api/v2/pwf/${this.flipData.link_id}/payment`,
          { method: "GET", headers }
        );
        const result = await resp.json();
        console.log("Payment status:", result);

        const payments = result.data || [];
        if (payments.length && payments[0].status === "SUCCESSFUL") {
          this.showCard("finishCardSuccess");
        } else {
          this.showCard("finishCardFailed");
        }
      } catch (err) {
        console.error("Error checking payment:", err);
        this.showCard("finishCardFailed");
      }
    }

    // Format dan kirim ke WhatsApp
    static sendToWhatsApp() {
      if (!this.cartData.length || !this.customerData.orderId) {
        alert("Tidak ada data pesanan untuk dikirim.");
        return;
      }

      const c = this.customerData;
      const lines = [
        `*PESANAN BARU*`,
        ``,
        `*Detail Pelanggan:*`,
        `Nama         : ${c.name}`,
        `No. WA       : ${c.phone}`,
        `Alamat       : ${c.address}`,
        `Metode Bayar : Transfer Flip`,
        `Metode Kirim : ${c.deliveryMethod === "delivery" ? "Diantar" : "Ambil Sendiri"}`,
        ``,
        `*Detail Pesanan:*`,
      ];

      this.cartData.forEach((item, i) => {
        lines.push(
          `${i + 1}. ${item.name} x${item.quantity} = ${formatRupiah(item.price * item.quantity)}`
        );
      });

      lines.push(
        ``,
        `*Ringkasan Pembayaran:*`,
        `Subtotal : ${formatRupiah(c.subtotal)}`,
        `Ongkir   : ${formatRupiah(c.deliveryFee)}`,
        `Total    : ${formatRupiah(c.total)}`,
        ``,
        `ID Pesanan: ${c.orderId}`
      );

      const msg = encodeURIComponent(lines.join("\n"));
      window.open(`https://wa.me/6281906955567?text=${msg}`, "_blank");
      this.hasSentWhatsapp = true;
    }

    // Tombol kembali
    static onBack(e) {
      e.preventDefault();
      if (!this.hasSentWhatsapp) {
        alert("Jangan lupa kirim pesanan ke WhatsApp admin dulu ya! üôè");
        return;
      }
      localStorage.removeItem("cart");
      localStorage.removeItem("customerData");
      localStorage.removeItem("flipResponse");
      localStorage.removeItem("flipLinkId");
      localStorage.removeItem("flipLinkUrl");
      window.location.href = "/";
    }

    // Tombol ‚ÄúKembali ke Flip‚Äù
    static onBackToFlip() {
      if (this.flipData.link_url) {
        window.location.href = /^https?:\/\//i.test(this.flipData.link_url)
          ? this.flipData.link_url
          : `https://${this.flipData.link_url}`;
      }
    }
  }

  // ------------------------- UTILS -------------------------
  function formatRupiah(amount) {
    return `Rp${Number(amount).toLocaleString("id-ID")}`;
  }

  // Inisialisasi
  document.addEventListener("DOMContentLoaded", () => {
    TransferConfirmationController.init();
  });
</script>

<style>
  .container {
    padding: 24px;
    display: flex;
    flex-direction: column;
    gap: 24px;
    align-items: flex-start;
    justify-content: flex-start;
    align-self: stretch;
    flex: 1;
    position: relative;
    overflow-y: scroll;
  }

  .container::-webkit-scrollbar {
    display: none;
  }

  .illust {
    height: 100px;
    -webkit-user-drag: none;
    user-select: none;
  }

  .finishCard {
    background: #ffffff;
    border-radius: 4px;
    border: 1px solid #000000;
    padding: 32px;
    display: flex;
    flex-direction: column;
    gap: 12px;
    align-items: center;
    justify-content: flex-start;
    align-self: stretch;
    position: relative;
  }

  .finishCard h2 {
    color: #000000;
    text-align: center;
    font-size: 20px;
    line-height: 24px;
    font-weight: 500;
  }

  .finishCard .description {
    color: #000000;
    text-align: center;
    font-size: 16px;
    line-height: 24px;
    font-weight: 400;
  }

  .buttonGroup {
    display: flex;
    flex-direction: row;
    gap: 8px;
  }

  .smallNote {
    color: #808080;
    text-align: center;
    font-size: 12px;
    line-height: 16px;
    font-weight: 400;
    position: relative;
    align-self: stretch;
  }
</style>
